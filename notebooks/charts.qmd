---
title: "Charts"
format: html
editor: visual
---

## Setup

```{python}
import hashlib
import os
from plotnine import ggplot, geom_col, aes, theme, element_text
import calendar
import pandas as pd
import numpy as np
import math
import ipyleaflet as ipl
import pymssql
from dotenv import load_dotenv
load_dotenv()
server = os.getenv("MYSERVER")
user = os.getenv("MYUSER")
password = os.getenv("MYPWD")
secret = os.getenv("SECRET")

def hash_id(id, secret, shorten=None):
    id_string = str(id) + secret
    hashed_id = hashlib.md5(id_string.encode())
    result = hashed_id.hexdigest()
    result = result if shorten == None else result[0: shorten]
    return(result) 

if not os.path.exists("images"):
    os.mkdir("images")
```

## 1A - Total duration per team by care type

<iframe width="600" height="371" seamless frameborder="0" scrolling="no" src="https://docs.google.com/spreadsheets/d/e/2PACX-1vR4StwaKtxsJZ814Vb0ASTmXs5XhciHBjdFwqQyBTc0UiOQcRN4Q2I0wcO6mX-zOtvQU95xy4Cja2wF/pubchart?oid=1979979810&amp;format=interactive">

</iframe>

```{python}
conn = pymssql.connect(server, user, password, "Carinova")

queryStr = f""" 
                SELECT TOP(10) *
                FROM dbo.moves_events
            """

movesDF = pd.read_sql_query(queryStr, conn)
conn.close()
movesDF
```

```{python}
conn = pymssql.connect(server, user, password, "Carinova")

queryStr = f""" 
                SELECT TOP(10) *
                FROM dbo.moves_hour_types
            """

htDF = pd.read_sql_query(queryStr, conn)
conn.close()
htDF
```

```{python}
conn = pymssql.connect(server, user, password, "Carinova")

queryStr = f""" 
                SELECT TOP(10) *
                FROM dbo.moves_hour_type_categories
            """

htcDF = pd.read_sql_query(queryStr, conn)
conn.close()
htcDF
```

```{python}

# Filters
yr = 2021
act_category = ('Persoonlijke Verzorging', 'Verpleging')

# Query

conn = pymssql.connect(server, user, password, "Carinova")

queryStr = f""" 
                SELECT client_id, me.valid_from, me.day_part, me.duration, me.container_type, me.container_id, mht.name AS activity_name, mhtc.name AS activity_category, mu.name AS team_name
                FROM dbo.moves_events me
                INNER JOIN dbo.moves_hour_types mht ON mht.objectId = me.hour_type_id
                INNER JOIN dbo.moves_hour_type_categories mhtc ON mhtc.objectId = mht.hour_type_category_id
                INNER JOIN dbo.moves_units mu ON mu.objectId = me.unit_id
                WHERE YEAR(me.valid_from) = {yr} AND mu.name LIKE '%V&V%' AND mhtc.name IN {act_category}
                ORDER BY valid_from
            """

rawDF = pd.read_sql_query(queryStr, conn)
conn.close()

# View
rawDF.head(10)

```

```{python}

# Transform
selectDF = rawDF.filter(['team_name', 'activity_name', 'duration'])
selectDF['duration_in_hours'] = selectDF['duration'].apply(lambda x: x/3600)
groupedDF = selectDF.groupby(['team_name', 'activity_name'], as_index=False)['duration_in_hours'].sum()

```

```{python}

# Plot

(ggplot(groupedDF, aes(x='team_name', y='duration_in_hours', fill='activity_name')) +
geom_col() +
theme(axis_text_x=element_text(rotation=90, hjust=1))
)

```
NB:

- [ ] Vragen aan Carinova wat de betekenis is van de verschillende zorgnivau's
- [ ] Wegfilteren kleine aantallen
- [ ] Omrekenen van secondes naar uren
- [ ] Grafiek met per team capaciteit naar opleidingsniveau (supply)